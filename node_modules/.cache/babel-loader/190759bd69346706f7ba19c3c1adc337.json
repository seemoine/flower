{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/Programming/myApp/src/dapp/components/ui/Timer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { service } from '../../machine';\nimport timer from '../../images/ui/timer.png';\nimport './Timer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst THIRTY_MINUTES = 60 * 25;\nexport const Timer = _ref => {\n  _s();\n\n  let {\n    startAtSeconds\n  } = _ref;\n  const [secondsLeft, setSecondsLeft] = React.useState(THIRTY_MINUTES);\n  React.useEffect(() => {\n    let interval;\n\n    if (secondsLeft > 0) {\n      interval = window.setInterval(() => {\n        const now = Math.floor(Date.now() / 1000);\n        const difference = now - startAtSeconds;\n        const time = THIRTY_MINUTES - difference;\n        setSecondsLeft(time);\n      }, 1000);\n    } else {\n      service.send('TIMER_COMPLETE');\n    }\n\n    return () => window.clearInterval(interval);\n  }, [startAtSeconds, secondsLeft]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"timer\",\n    className: classnames(secondsLeft < 60 * 5 ? \"red-timer\" : \"\", secondsLeft < 60 * 1 && secondsLeft !== 0 ? \"pulse\" : \"\"),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), `${Math.floor(secondsLeft / 60)}:${(secondsLeft % 60).toString().padStart(2, '0')}`]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Timer, \"s06NtGj7wnhBnefL4MlHCRaUU1E=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/home/jacob/Documents/Programming/myApp/src/dapp/components/ui/Timer.tsx"],"names":["React","classnames","service","timer","THIRTY_MINUTES","Timer","startAtSeconds","secondsLeft","setSecondsLeft","useState","useEffect","interval","window","setInterval","now","Math","floor","Date","difference","time","send","clearInterval","toString","padStart"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,OAAO,aAAP;;AAMA,MAAMC,cAAc,GAAG,KAAK,EAA5B;AAEA,OAAO,MAAMC,KAAsB,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AAC1D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,KAAK,CAACS,QAAN,CAAeL,cAAf,CAAtC;AAEAJ,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AAClB,QAAIC,QAAJ;;AAEA,QAAIJ,WAAW,GAAG,CAAlB,EAAqB;AACjBI,MAAAA,QAAQ,GAAGC,MAAM,CAACC,WAAP,CAAmB,MAAM;AAChC,cAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACH,GAAL,KAAa,IAAxB,CAAZ;AACA,cAAMI,UAAU,GAAGJ,GAAG,GAAGR,cAAzB;AACA,cAAMa,IAAI,GAAGf,cAAc,GAAGc,UAA9B;AAEAV,QAAAA,cAAc,CAACW,IAAD,CAAd;AACH,OANU,EAMR,IANQ,CAAX;AAOH,KARD,MAQO;AACHjB,MAAAA,OAAO,CAACkB,IAAR,CAAa,gBAAb;AACH;;AAED,WAAO,MAAMR,MAAM,CAACS,aAAP,CAAqBV,QAArB,CAAb;AACH,GAhBD,EAgBG,CAACL,cAAD,EAAiBC,WAAjB,CAhBH;AAkBA,sBACI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAgB,IAAA,SAAS,EAAEN,UAAU,CAACM,WAAW,GAAG,KAAG,CAAjB,GAAqB,WAArB,GAAmC,EAApC,EAAyCA,WAAW,GAAG,KAAG,CAAjB,IAAsBA,WAAW,KAAK,CAAvC,GAA4C,OAA5C,GAAsD,EAA9F,CAArC;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEJ;AAAV;AAAA;AAAA;AAAA;AAAA,YADJ,EAEM,GAAEY,IAAI,CAACC,KAAL,CAAWT,WAAW,GAAG,EAAzB,CAA6B,IAAG,CAACA,WAAW,GAAG,EAAf,EAAmBe,QAAnB,GAA8BC,QAA9B,CAAuC,CAAvC,EAA0C,GAA1C,CAAgD,EAFxF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA3BM;;GAAMlB,K;;KAAAA,K","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\n\nimport { service } from '../../machine'\n\nimport timer from '../../images/ui/timer.png'\n\nimport './Timer.css'\n\ninterface Props {\n    startAtSeconds: number\n}\n\nconst THIRTY_MINUTES = 60 * 25\n\nexport const Timer: React.FC<Props> = ({ startAtSeconds }) => {\n    const [secondsLeft, setSecondsLeft] = React.useState(THIRTY_MINUTES)\n\n    React.useEffect(() => {\n        let interval: number;\n\n        if (secondsLeft > 0) {\n            interval = window.setInterval(() => {\n                const now = Math.floor(Date.now() / 1000)\n                const difference = now - startAtSeconds\n                const time = THIRTY_MINUTES - difference\n    \n                setSecondsLeft(time)\n            }, 1000)\n        } else {\n            service.send('TIMER_COMPLETE')\n        }\n\n        return () => window.clearInterval(interval)\n    }, [startAtSeconds, secondsLeft])\n\n    return (\n        <div id=\"timer\" className={classnames(secondsLeft < 60*5 ? \"red-timer\" : \"\", (secondsLeft < 60*1 && secondsLeft !== 0) ? \"pulse\" : \"\")}>\n            <img src={timer} />\n            {`${Math.floor(secondsLeft / 60)}:${(secondsLeft % 60).toString().padStart(2, '0') }`}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
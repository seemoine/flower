{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/Programming/myApp/src/dapp/components/farm/Field.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport sunflower from \"../../images/sunflower/plant.png\";\nimport sunflowerSeedling from \"../../images/sunflower/seedling.png\";\nimport pumpkin from \"../../images/pumpkin/plant.png\";\nimport pumpkinSeedling from \"../../images/pumpkin/seedling.png\";\nimport beetroot from \"../../images/beetroot/plant.png\";\nimport beetrootSeedling from \"../../images/beetroot/seedling.png\";\nimport cauliflower from \"../../images/cauliflower/plant.png\";\nimport cauliflowerSeedling from \"../../images/cauliflower/seedling.png\";\nimport potato from \"../../images/potato/plant.png\";\nimport potatoSeedling from \"../../images/potato/seedling.png\";\nimport radish from \"../../images/radish/plant.png\";\nimport radishSeedling from \"../../images/radish/seedling.png\";\nimport parsnip from \"../../images/parsnip/plant.png\";\nimport parsnipSeedling from \"../../images/parsnip/seedling.png\";\nimport coin from \"../../images/ui/icon.png\";\nimport planted from \"../../images/land/soil/planted.png\";\nimport terrain from \"../../images/land/soil/soil.png\";\nimport progressStart from \"../../images/ui/progress/start.png\";\nimport progressQuarter from \"../../images/ui/progress/quarter.png\";\nimport progressHalf from \"../../images/ui/progress/half.png\";\nimport progressAlmost from \"../../images/ui/progress/almost.png\";\nimport selectBoxTL from \"../../images/ui/select-box/selectbox_tl.png\";\nimport selectBoxTR from \"../../images/ui/select-box/selectbox_tr.png\";\nimport selectBoxBR from \"../../images/ui/select-box/selectbox_br.png\";\nimport selectBoxBL from \"../../images/ui/select-box/selectbox_bl.png\";\nimport { Fruit, isFruit } from \"../../types/contract\";\nimport { secondsToString } from \"../../utils/time\";\nimport \"./Field.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getTimeLeft(createdAt, totalTime) {\n  const secondsElapsed = Date.now() / 1000 - createdAt;\n\n  if (secondsElapsed > totalTime) {\n    return 0;\n  }\n\n  return totalTime - secondsElapsed;\n}\n\nexport const Field = _ref => {\n  _s();\n\n  let {\n    square,\n    onClick,\n    selectedItem,\n    balance,\n    fruits\n  } = _ref;\n  const [_, setTimer] = React.useState(0);\n  const [harvestPrice, setHarvestPrice] = React.useState(null);\n  const [showPrice, setShowPrice] = React.useState(false);\n  const [showInsufficientFunds, setShowInsufficientFunds] = React.useState(false);\n  const fruit = fruits.find(item => item.fruit === square.fruit);\n  const totalTime = (fruit === null || fruit === void 0 ? void 0 : fruit.harvestMinutes) * 60;\n  const click = React.useCallback(() => {\n    if (!isFruit(selectedItem)) {\n      return;\n    } // Show harvest price\n\n\n    const fruit = fruits.find(item => item.fruit === square.fruit); // Harvest\n\n    if (fruit) {\n      setHarvestPrice(`+${fruit.sellPrice}`);\n    } else {\n      // Plant\n      const buyFruit = fruits.find(item => item.fruit === selectedItem.fruit);\n\n      if (buyFruit.buyPrice > balance) {\n        setShowInsufficientFunds(true);\n        window.setTimeout(() => {\n          setShowInsufficientFunds(false);\n        }, 500);\n        return;\n      }\n\n      setHarvestPrice(`-${buyFruit.buyPrice}`);\n    }\n\n    setShowPrice(true); // Remove harvest price after X seconds\n\n    window.setTimeout(() => {\n      setShowPrice(false);\n    }, 700);\n    onClick();\n  }, [balance, onClick, selectedItem, square.fruit]);\n  const setHarvestTime = React.useCallback(() => {\n    setTimer(count => count + 1);\n  }, []);\n  React.useEffect(() => {\n    if (square.fruit && square.fruit !== Fruit.None) {\n      setHarvestTime();\n      const interval = window.setInterval(setHarvestTime, 1000);\n      return () => window.clearInterval(interval);\n    }\n    /* eslint-disable */\n\n  }, [square]);\n  /* eslint-enable */\n\n  const Seedling = () => {\n    // TODO different plant seedlings\n    if (square.fruit === Fruit.Sunflower) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sunflowerSeedling,\n        className: \"seedling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Potato) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: potatoSeedling,\n        className: \"seedling potato-seedling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Pumpkin) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pumpkinSeedling,\n        className: \"seedling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Beetroot) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: beetrootSeedling,\n        className: \"seedling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Cauliflower) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cauliflowerSeedling,\n        className: \"seedling cauliflower-seedling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Parsnip) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: parsnipSeedling,\n        className: \"seedling parnsip-seedling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Radish) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: radishSeedling,\n        className: \"seedling radish-seedling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 14\n      }, this);\n    }\n\n    return null;\n  };\n\n  const Plant = () => {\n    // TODO different plant seedlings\n    if (square.fruit === Fruit.Sunflower) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sunflower,\n        className: \"sunflower\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Potato) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: potato,\n        className: \"potato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Pumpkin) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pumpkin,\n        className: \"pumpkin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Beetroot) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: beetroot,\n        className: \"beetroot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Cauliflower) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cauliflower,\n        className: \"cauliflower\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Parsnip) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: parsnip,\n        className: \"parsnip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (square.fruit === Fruit.Radish) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: radish,\n        className: \"radish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 14\n      }, this);\n    }\n\n    return null;\n  };\n\n  const Progress = () => {\n    if (timeLeft > totalTime * (3 / 4)) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: progressStart,\n        className: \"progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (timeLeft > totalTime * (1 / 2)) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: progressQuarter,\n        className: \"progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (timeLeft > totalTime * (1 / 4)) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: progressHalf,\n        className: \"progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (timeLeft > 0) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: progressAlmost,\n        className: \"progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 14\n      }, this);\n    }\n\n    return null;\n  };\n\n  const timeLeft = getTimeLeft(square.createdAt, totalTime);\n  const plantingFruit = isFruit(selectedItem) && fruits.find(item => item.fruit === selectedItem.fruit);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field\",\n    onClick: !timeLeft ? click : undefined,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"harvest\",\n      style: {\n        opacity: !!showPrice ? \"1\" : \"0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"harvest-amount\",\n        children: harvestPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"harvest-coin\",\n        src: coin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), square.fruit === Fruit.None && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!showPrice && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"plant-hint\",\n        src: plantingFruit.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: terrain,\n        className: \"soil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"field-no-funds\",\n      style: {\n        opacity: !!showInsufficientFunds ? 1 : 0\n      },\n      children: \"Insufficient funds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), square.fruit !== Fruit.None && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: planted,\n        className: \"planted-soil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), timeLeft && timeLeft > 0 && Seedling(), timeLeft === 0 && Plant(), Progress(), timeLeft && timeLeft > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-text\",\n        children: secondsToString(timeLeft)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field-edges\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectBoxTL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectBoxTR\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectBoxBL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectBoxBR\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Field, \"r2K2skT7bs+gX7MQ3B4Si46g51A=\");\n\n_c = Field;\n\nvar _c;\n\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"sources":["/home/jacob/Documents/Programming/myApp/src/dapp/components/farm/Field.tsx"],"names":["React","sunflower","sunflowerSeedling","pumpkin","pumpkinSeedling","beetroot","beetrootSeedling","cauliflower","cauliflowerSeedling","potato","potatoSeedling","radish","radishSeedling","parsnip","parsnipSeedling","coin","planted","terrain","progressStart","progressQuarter","progressHalf","progressAlmost","selectBoxTL","selectBoxTR","selectBoxBR","selectBoxBL","Fruit","isFruit","secondsToString","getTimeLeft","createdAt","totalTime","secondsElapsed","Date","now","Field","square","onClick","selectedItem","balance","fruits","_","setTimer","useState","harvestPrice","setHarvestPrice","showPrice","setShowPrice","showInsufficientFunds","setShowInsufficientFunds","fruit","find","item","harvestMinutes","click","useCallback","sellPrice","buyFruit","buyPrice","window","setTimeout","setHarvestTime","count","useEffect","None","interval","setInterval","clearInterval","Seedling","Sunflower","Potato","Pumpkin","Beetroot","Cauliflower","Parsnip","Radish","Plant","Progress","timeLeft","plantingFruit","undefined","opacity","image"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport sunflower from \"../../images/sunflower/plant.png\";\nimport sunflowerSeedling from \"../../images/sunflower/seedling.png\";\nimport pumpkin from \"../../images/pumpkin/plant.png\";\nimport pumpkinSeedling from \"../../images/pumpkin/seedling.png\";\nimport beetroot from \"../../images/beetroot/plant.png\";\nimport beetrootSeedling from \"../../images/beetroot/seedling.png\";\nimport cauliflower from \"../../images/cauliflower/plant.png\";\nimport cauliflowerSeedling from \"../../images/cauliflower/seedling.png\";\nimport potato from \"../../images/potato/plant.png\";\nimport potatoSeedling from \"../../images/potato/seedling.png\";\nimport radish from \"../../images/radish/plant.png\";\nimport radishSeedling from \"../../images/radish/seedling.png\";\nimport parsnip from \"../../images/parsnip/plant.png\";\nimport parsnipSeedling from \"../../images/parsnip/seedling.png\";\nimport coin from \"../../images/ui/icon.png\";\nimport cancel from \"../../images/ui/cancel.png\";\n\nimport planted from \"../../images/land/soil/planted.png\";\nimport terrain from \"../../images/land/soil/soil.png\";\n\nimport progressStart from \"../../images/ui/progress/start.png\";\nimport progressQuarter from \"../../images/ui/progress/quarter.png\";\nimport progressHalf from \"../../images/ui/progress/half.png\";\nimport progressAlmost from \"../../images/ui/progress/almost.png\";\n\nimport selectBoxTL from \"../../images/ui/select-box/selectbox_tl.png\";\nimport selectBoxTR from \"../../images/ui/select-box/selectbox_tr.png\";\nimport selectBoxBR from \"../../images/ui/select-box/selectbox_br.png\";\nimport selectBoxBL from \"../../images/ui/select-box/selectbox_bl.png\";\n\nimport { FruitItem } from \"../../types/fruits\";\nimport { ActionableItem, Fruit, isFruit, Square } from \"../../types/contract\";\nimport { secondsToString } from \"../../utils/time\";\n\nimport \"./Field.css\";\n\ninterface Props {\n  square: Square;\n  selectedItem: ActionableItem;\n  fruits: FruitItem[];\n  balance: number;\n  onClick: () => void;\n}\n\nfunction getTimeLeft(createdAt: number, totalTime: number) {\n  const secondsElapsed = Date.now() / 1000 - createdAt;\n  if (secondsElapsed > totalTime) {\n    return 0;\n  }\n\n  return totalTime - secondsElapsed;\n}\n\nexport const Field: React.FC<Props> = ({\n  square,\n  onClick,\n  selectedItem,\n  balance,\n  fruits,\n}) => {\n  const [_, setTimer] = React.useState<number>(0);\n  const [harvestPrice, setHarvestPrice] = React.useState<string>(null);\n  const [showPrice, setShowPrice] = React.useState(false);\n  const [showInsufficientFunds, setShowInsufficientFunds] =\n    React.useState(false);\n\n  const fruit = fruits.find((item) => item.fruit === square.fruit);\n  const totalTime = fruit?.harvestMinutes * 60;\n\n  const click = React.useCallback(() => {\n    if (!isFruit(selectedItem)) {\n      return;\n    }\n    // Show harvest price\n\n    const fruit = fruits.find((item) => item.fruit === square.fruit);\n    // Harvest\n    if (fruit) {\n      setHarvestPrice(`+${fruit.sellPrice}`);\n    } else {\n      // Plant\n      const buyFruit = fruits.find((item) => item.fruit === selectedItem.fruit);\n\n      if (buyFruit.buyPrice > balance) {\n        setShowInsufficientFunds(true);\n        window.setTimeout(() => {\n          setShowInsufficientFunds(false);\n        }, 500);\n\n        return;\n      }\n\n      setHarvestPrice(`-${buyFruit.buyPrice}`);\n    }\n\n    setShowPrice(true);\n\n    // Remove harvest price after X seconds\n    window.setTimeout(() => {\n      setShowPrice(false);\n    }, 700);\n\n    onClick();\n  }, [balance, onClick, selectedItem, square.fruit]);\n\n  const setHarvestTime = React.useCallback(() => {\n    setTimer((count) => count + 1);\n  }, []);\n\n  React.useEffect(() => {\n    if (square.fruit && square.fruit !== Fruit.None) {\n      setHarvestTime();\n      const interval = window.setInterval(setHarvestTime, 1000);\n      return () => window.clearInterval(interval);\n    }\n    /* eslint-disable */\n  }, [square]);\n  /* eslint-enable */\n\n  const Seedling = () => {\n    // TODO different plant seedlings\n    if (square.fruit === Fruit.Sunflower) {\n      return <img src={sunflowerSeedling} className=\"seedling\" />;\n    }\n\n    if (square.fruit === Fruit.Potato) {\n      return <img src={potatoSeedling} className=\"seedling potato-seedling\" />;\n    }\n\n    if (square.fruit === Fruit.Pumpkin) {\n      return <img src={pumpkinSeedling} className=\"seedling\" />;\n    }\n\n    if (square.fruit === Fruit.Beetroot) {\n      return <img src={beetrootSeedling} className=\"seedling\" />;\n    }\n\n    if (square.fruit === Fruit.Cauliflower) {\n      return (\n        <img\n          src={cauliflowerSeedling}\n          className=\"seedling cauliflower-seedling\"\n        />\n      );\n    }\n\n    if (square.fruit === Fruit.Parsnip) {\n      return (\n        <img src={parsnipSeedling} className=\"seedling parnsip-seedling\" />\n      );\n    }\n\n    if (square.fruit === Fruit.Radish) {\n      return <img src={radishSeedling} className=\"seedling radish-seedling\" />;\n    }\n\n    return null;\n  };\n\n  const Plant = () => {\n    // TODO different plant seedlings\n    if (square.fruit === Fruit.Sunflower) {\n      return <img src={sunflower} className=\"sunflower\" />;\n    }\n\n    if (square.fruit === Fruit.Potato) {\n      return <img src={potato} className=\"potato\" />;\n    }\n\n    if (square.fruit === Fruit.Pumpkin) {\n      return <img src={pumpkin} className=\"pumpkin\" />;\n    }\n\n    if (square.fruit === Fruit.Beetroot) {\n      return <img src={beetroot} className=\"beetroot\" />;\n    }\n\n    if (square.fruit === Fruit.Cauliflower) {\n      return <img src={cauliflower} className=\"cauliflower\" />;\n    }\n\n    if (square.fruit === Fruit.Parsnip) {\n      return <img src={parsnip} className=\"parsnip\" />;\n    }\n\n    if (square.fruit === Fruit.Radish) {\n      return <img src={radish} className=\"radish\" />;\n    }\n\n    return null;\n  };\n\n  const Progress = () => {\n    if (timeLeft > totalTime * (3 / 4)) {\n      return <img src={progressStart} className=\"progress\" />;\n    }\n\n    if (timeLeft > totalTime * (1 / 2)) {\n      return <img src={progressQuarter} className=\"progress\" />;\n    }\n\n    if (timeLeft > totalTime * (1 / 4)) {\n      return <img src={progressHalf} className=\"progress\" />;\n    }\n\n    if (timeLeft > 0) {\n      return <img src={progressAlmost} className=\"progress\" />;\n    }\n\n    return null;\n  };\n\n  const timeLeft = getTimeLeft(square.createdAt, totalTime);\n\n  const plantingFruit =\n    isFruit(selectedItem) &&\n    fruits.find((item) => item.fruit === selectedItem.fruit);\n\n  return (\n    <div className=\"field\" onClick={!timeLeft ? click : undefined}>\n      <div className=\"harvest\" style={{ opacity: !!showPrice ? \"1\" : \"0\" }}>\n        <span className=\"harvest-amount\">{harvestPrice}</span>\n        <img className=\"harvest-coin\" src={coin} />\n      </div>\n      {square.fruit === Fruit.None && (\n        <>\n          {!showPrice && (\n            <img className=\"plant-hint\" src={plantingFruit.image} />\n          )}\n          <img src={terrain} className=\"soil\" />\n        </>\n      )}\n      {\n        <span\n          className=\"field-no-funds\"\n          style={{ opacity: !!showInsufficientFunds ? 1 : 0 }}\n        >\n          Insufficient funds\n        </span>\n      }\n      {square.fruit !== Fruit.None && (\n        <>\n          <img src={planted} className=\"planted-soil\" />\n          {timeLeft && timeLeft > 0 && Seedling()}\n          {timeLeft === 0 && Plant()}\n          {Progress()}\n          {timeLeft && timeLeft > 0 && (\n            <span className=\"progress-text\">{secondsToString(timeLeft)}</span>\n          )}\n        </>\n      )}\n      <div className=\"field-edges\">\n        <div>\n          <img src={selectBoxTL} />\n          <img src={selectBoxTR} />\n        </div>\n        <div>\n          <img src={selectBoxBL} />\n          <img src={selectBoxBR} />\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
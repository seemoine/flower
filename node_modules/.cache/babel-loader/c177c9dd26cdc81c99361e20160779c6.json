{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/Programming/myApp/src/dapp/components/ui/CommunityApproval.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from \"../ui/Button\";\nimport { service } from \"../../machine\";\nimport matic from \"../../images/ui/matic.png\";\nimport icon from \"../../images/ui/icon.png\";\nimport carry from \"../../images/characters/goblin_carry.gif\";\nimport \"./Crafting.css\";\nimport { useService } from \"@xstate/react\";\nimport { COMMUNITY_CRAFTING_ADDRESS } from \"../../Blockchain\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CommunityApproval = _ref => {\n  _s();\n\n  let {\n    onClose,\n    balance,\n    recipe,\n    quickSwapRate\n  } = _ref;\n  const [isApproving, setIsApproving] = useState(false);\n  const [isApproved, setIsApproved] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [machineState, send] = useService(service);\n  const isUnsaved = machineState.context.blockChain.isUnsaved();\n  const sunflowerTokenAmount = recipe.ingredients[0].amount;\n  const sunflowerTokens = recipe.ingredients[0].amount;\n  const maticPrice = sunflowerTokens * quickSwapRate;\n\n  const craft = () => {\n    service.send(\"CRAFT\", {\n      recipe,\n      amount: 1,\n      eth: maticPrice\n    });\n    onClose();\n  };\n\n  const approve = async () => {\n    setIsApproving(true);\n    setError(\"\");\n\n    try {\n      await machineState.context.blockChain.approve(COMMUNITY_CRAFTING_ADDRESS, sunflowerTokenAmount);\n      setIsApproved(true);\n    } catch (e) {\n      setError(`Unable to approve`);\n    } finally {\n      setIsApproving(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"crafting\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"community-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"community-guide-text\",\n        children: \"Crafting this item will burn your tokens into the liquidity pool.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"community-guide-text\",\n        children: \"Please note that prices change frequently and the $SFF amount may have a slippage. By crafting you accept these conditions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), !isApproved && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"community-guide-text\",\n          children: \"Step 1 - Approve $SFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), !isApproving && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: approve,\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 30\n        }, this), isApproving && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"approving-animation\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"approving-goblin\",\n              src: carry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"approving-sff\",\n              src: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"community-guide-text\",\n            children: \"Approving...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), isApproved && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"community-guide-text\",\n          children: \"Step 2 - Craft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: craft,\n          children: \"Craft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"community-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recipe\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `recipe-type recipe-nft`,\n        children: \"NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"recipe-title\",\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"crafting-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"recipe-description\",\n        children: recipe.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ingredients\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredient\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"ingredient-image\",\n              src: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ingredient-count\",\n              children: \"$SFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `ingredient-text`,\n            children: sunflowerTokenAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredient\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"ingredient-image\",\n              src: matic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ingredient-count\",\n              children: \"$MATIC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `ingredient-text`,\n            children: maticPrice.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommunityApproval, \"iNOMl4Wjs8NkqZHsH3KBvOzZtPw=\", false, function () {\n  return [useService];\n});\n\n_c = CommunityApproval;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommunityApproval\");","map":{"version":3,"sources":["/home/jacob/Documents/Programming/myApp/src/dapp/components/ui/CommunityApproval.tsx"],"names":["React","useState","Button","service","matic","icon","carry","useService","COMMUNITY_CRAFTING_ADDRESS","CommunityApproval","onClose","balance","recipe","quickSwapRate","isApproving","setIsApproving","isApproved","setIsApproved","error","setError","machineState","send","isUnsaved","context","blockChain","sunflowerTokenAmount","ingredients","amount","sunflowerTokens","maticPrice","craft","eth","approve","e","name","image","description","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Panel } from \"../ui/Panel\";\nimport { Button } from \"../ui/Button\";\nimport { Message } from \"../ui/Message\";\nimport { InventoryItems } from \"../ui/InventoryItems\";\n\nimport {\n  Context,\n  BlockchainEvent,\n  BlockchainState,\n  service,\n} from \"../../machine\";\n\nimport matic from \"../../images/ui/matic.png\";\nimport icon from \"../../images/ui/icon.png\";\nimport carry from \"../../images/characters/goblin_carry.gif\";\n\nimport { recipes, Recipe, Inventory, Item } from \"../../types/crafting\";\nimport { Box, BoxProps } from \"./Box\";\n\nimport \"./Crafting.css\";\nimport { useService } from \"@xstate/react\";\nimport { COMMUNITY_CRAFTING_ADDRESS } from \"../../Blockchain\";\n\ninterface Props {\n  onClose: () => void;\n  balance: number;\n  recipe: Recipe;\n  quickSwapRate: number;\n}\n\nexport const CommunityApproval: React.FC<Props> = ({\n  onClose,\n  balance,\n  recipe,\n  quickSwapRate,\n}) => {\n  const [isApproving, setIsApproving] = useState(false);\n  const [isApproved, setIsApproved] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [machineState, send] = useService<\n    Context,\n    BlockchainEvent,\n    BlockchainState\n  >(service);\n  const isUnsaved = machineState.context.blockChain.isUnsaved();\n  const sunflowerTokenAmount = recipe.ingredients[0].amount;\n\n  const sunflowerTokens = recipe.ingredients[0].amount;\n  const maticPrice = sunflowerTokens * quickSwapRate;\n\n  const craft = () => {\n    service.send(\"CRAFT\", {\n      recipe,\n      amount: 1,\n      eth: maticPrice,\n    });\n    onClose();\n  };\n\n  const approve = async () => {\n    setIsApproving(true);\n    setError(\"\");\n\n    try {\n      await machineState.context.blockChain.approve(\n        COMMUNITY_CRAFTING_ADDRESS,\n        sunflowerTokenAmount\n      );\n      setIsApproved(true);\n    } catch (e) {\n      setError(`Unable to approve`);\n    } finally {\n      setIsApproving(false);\n    }\n  };\n\n  return (\n    <div id=\"crafting\">\n      <div id=\"community-left\">\n        <span className=\"community-guide-text\">\n          Crafting this item will burn your tokens into the liquidity pool.\n        </span>\n        <span className=\"community-guide-text\">\n          Please note that prices change frequently and the $SFF amount may\n          have a slippage. By crafting you accept these conditions.\n        </span>\n        {!isApproved && (\n          <div>\n            <span className=\"community-guide-text\">\n              Step 1 - Approve $SFF\n            </span>\n            {!isApproving && <Button onClick={approve}>Approve</Button>}\n            {isApproving && (\n              <>\n                <div id=\"approving-animation\">\n                  <img id=\"approving-goblin\" src={carry} />\n                  <img id=\"approving-sff\" src={icon} />\n                </div>\n                <span className=\"community-guide-text\">Approving...</span>\n              </>\n            )}\n          </div>\n        )}\n\n        {isApproved && (\n          <div>\n            <span className=\"community-guide-text\">Step 2 - Craft</span>\n            <Button onClick={craft}>Craft</Button>\n          </div>\n        )}\n\n        {error && <span id=\"community-error\">{error}</span>}\n      </div>\n      <div id=\"recipe\">\n        <span className={`recipe-type recipe-nft`}>NFT</span>\n        <span id=\"recipe-title\">{recipe.name}</span>\n        <div id=\"crafting-item\">\n          <img src={recipe.image} />\n        </div>\n        <span id=\"recipe-description\">{recipe.description}</span>\n\n        <div id=\"ingredients\">\n          <div className=\"ingredient\">\n            <div>\n              <img className=\"ingredient-image\" src={icon} />\n              <span className=\"ingredient-count\">$SFF</span>\n            </div>\n            <span className={`ingredient-text`}>\n              {sunflowerTokenAmount}\n            </span>\n          </div>\n          <div className=\"ingredient\">\n            <div>\n              <img className=\"ingredient-image\" src={matic} />\n              <span className=\"ingredient-count\">$MATIC</span>\n            </div>\n            <span className={`ingredient-text`}>\n              {maticPrice.toFixed(2)}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
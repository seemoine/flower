{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/Programming/myApp/src/dapp/components/ui/HalveningBanner.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./Banner.css\";\nimport { useService } from \"@xstate/react\";\nimport React, { useState } from \"react\";\nimport closeIcon from \"../../images/ui/close.png\";\nimport alert from \"../../images/ui/expression_alerted.png\";\nimport { service } from \"../../machine\";\nimport { numberWithBreaks } from \"../../utils/number\";\nimport { getNextHalvingThreshold } from \"../../utils/supply\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Banner = () => {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [totalSupply, setTotalSupply] = React.useState(0);\n  const [machineState, send] = useService(service);\n  React.useEffect(() => {\n    const load = async () => {\n      const notReady = machineState.matches(\"loading\") || machineState.matches(\"initial\") || machineState.matches(\"registering\") || machineState.matches(\"creating\") || machineState.matches(\"onboarding\");\n      if (notReady && totalSupply < 1) setTimeout(() => load(), 100);\n      const supply = await service.machine.context.blockChain.totalSupply();\n      setTotalSupply(supply);\n    };\n\n    load();\n  }, [machineState]);\n  if (!show || !totalSupply) return null;\n  const nextHalvingThreshold = getNextHalvingThreshold(totalSupply);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"halvening-banner\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"When total supply reaches\", \" \", numberWithBreaks(nextHalvingThreshold.amount), \" crop and upgrade prices will be divided by \", nextHalvingThreshold.halveningRate, \". Be prepared!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://docs.sunflower-farmers.com/tokenomics#the-halvening\",\n        target: \"_blank\",\n        children: \"Read more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: closeIcon,\n      id: \"banner-close\",\n      onClick: () => setShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Banner, \"pQxQvU/IaeBXLni5jHRRE34tBxc=\", false, function () {\n  return [useService];\n});\n\n_c = Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["/home/jacob/Documents/Programming/myApp/src/dapp/components/ui/HalveningBanner.tsx"],"names":["useService","React","useState","closeIcon","alert","service","numberWithBreaks","getNextHalvingThreshold","Banner","show","setShow","totalSupply","setTotalSupply","machineState","send","useEffect","load","notReady","matches","setTimeout","supply","machine","context","blockChain","nextHalvingThreshold","amount","halveningRate"],"mappings":";;;AAAA,OAAO,cAAP;AAEA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,wCAAlB;AACA,SAIEC,OAJF,QAKO,eALP;AAMA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,uBAAT,QAAwC,oBAAxC;;AAEA,OAAO,MAAMC,MAAgB,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACC,QAAN,CAAuB,CAAvB,CAAtC;AAEA,QAAM,CAACW,YAAD,EAAeC,IAAf,IAAuBd,UAAU,CAIrCK,OAJqC,CAAvC;AAMAJ,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,UAAMC,IAAI,GAAG,YAAY;AACvB,YAAMC,QAAQ,GACZJ,YAAY,CAACK,OAAb,CAAqB,SAArB,KACAL,YAAY,CAACK,OAAb,CAAqB,SAArB,CADA,IAEAL,YAAY,CAACK,OAAb,CAAqB,aAArB,CAFA,IAGAL,YAAY,CAACK,OAAb,CAAqB,UAArB,CAHA,IAIAL,YAAY,CAACK,OAAb,CAAqB,YAArB,CALF;AAOA,UAAID,QAAQ,IAAIN,WAAW,GAAG,CAA9B,EAAiCQ,UAAU,CAAC,MAAMH,IAAI,EAAX,EAAe,GAAf,CAAV;AAEjC,YAAMI,MAAM,GACV,MAAMf,OAAO,CAACgB,OAAR,CAAgBC,OAAhB,CAAwBC,UAAxB,CAAmCZ,WAAnC,EADR;AAGAC,MAAAA,cAAc,CAACQ,MAAD,CAAd;AACD,KAdD;;AAgBAJ,IAAAA,IAAI;AACL,GAlBD,EAkBG,CAACH,YAAD,CAlBH;AAoBA,MAAI,CAACJ,IAAD,IAAS,CAACE,WAAd,EAA2B,OAAO,IAAP;AAE3B,QAAMa,oBAAoB,GAAGjB,uBAAuB,CAACI,WAAD,CAApD;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEP;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,gDAC4B,GAD5B,EAEGE,gBAAgB,CAACkB,oBAAoB,CAACC,MAAtB,CAFnB,kDAG6BD,oBAAoB,CAACE,aAHlD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,IAAI,EAAC,6DADP;AAEE,QAAA,MAAM,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAgBE;AACE,MAAA,GAAG,EAAEvB,SADP;AAEE,MAAA,EAAE,EAAC,cAFL;AAGE,MAAA,OAAO,EAAE,MAAMO,OAAO,CAAC,KAAD;AAHxB;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA1DM;;GAAMF,M;UAIkBR,U;;;KAJlBQ,M","sourcesContent":["import \"./Banner.css\";\n\nimport { useService } from \"@xstate/react\";\nimport React, { useState } from \"react\";\n\nimport closeIcon from \"../../images/ui/close.png\";\nimport alert from \"../../images/ui/expression_alerted.png\";\nimport {\n  BlockchainEvent,\n  Context,\n  BlockchainState,\n  service,\n} from \"../../machine\";\nimport { numberWithBreaks } from \"../../utils/number\";\nimport { getNextHalvingThreshold } from \"../../utils/supply\";\n\nexport const Banner: React.FC = () => {\n  const [show, setShow] = useState(true);\n  const [totalSupply, setTotalSupply] = React.useState<number>(0);\n\n  const [machineState, send] = useService<\n    Context,\n    BlockchainEvent,\n    BlockchainState\n  >(service);\n\n  React.useEffect(() => {\n    const load = async () => {\n      const notReady =\n        machineState.matches(\"loading\") ||\n        machineState.matches(\"initial\") ||\n        machineState.matches(\"registering\") ||\n        machineState.matches(\"creating\") ||\n        machineState.matches(\"onboarding\");\n\n      if (notReady && totalSupply < 1) setTimeout(() => load(), 100);\n\n      const supply =\n        await service.machine.context.blockChain.totalSupply();\n\n      setTotalSupply(supply);\n    };\n\n    load();\n  }, [machineState]);\n\n  if (!show || !totalSupply) return null;\n\n  const nextHalvingThreshold = getNextHalvingThreshold(totalSupply);\n\n  return (\n    <div id=\"halvening-banner\">\n      <img src={alert} />\n      <div>\n        <span>\n          When total supply reaches{\" \"}\n          {numberWithBreaks(nextHalvingThreshold.amount)} crop and upgrade\n          prices will be divided by {nextHalvingThreshold.halveningRate}.\n          Be prepared!\n        </span>\n        <a\n          href=\"https://docs.sunflower-farmers.com/tokenomics#the-halvening\"\n          target=\"_blank\"\n        >\n          Read more\n        </a>\n      </div>\n      <img\n        src={closeIcon}\n        id=\"banner-close\"\n        onClick={() => setShow(false)}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/Programming/myApp/src/dapp/components/ui/CommunityCrafting.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Button } from \"../ui/Button\";\nimport { Message } from \"../ui/Message\";\nimport { service } from \"../../machine\";\nimport matic from \"../../images/ui/matic.png\";\nimport discord from \"../../images/ui/discord.jpeg\";\nimport coin from \"../../images/ui/icon.png\";\nimport { recipes } from \"../../types/crafting\";\nimport { Box } from \"./Box\";\nimport \"./Crafting.css\";\nimport { useService } from \"@xstate/react\";\nimport { CommunityApproval } from \"./CommunityApproval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COMMUNITY_RECIPES = recipes.filter(_c = recipe => !!recipe.communityMember); // 20% for designer, 5% for the team\n\n_c2 = COMMUNITY_RECIPES;\nconst COMMISION = 0.25; // In case people take awhile to confirm the transaction\n\nconst SLIPPAGE = 0.02;\nconst MATIC_MULTIPLIER = 1 + COMMISION + SLIPPAGE;\nexport const CommunityCrafting = _ref => {\n  _s();\n\n  let {\n    onClose,\n    balance,\n    inventory,\n    totalItemSupplies,\n    level\n  } = _ref;\n  const [amount, setAmount] = React.useState(1);\n  const [quickSwapRate, setQuickSwapRate] = React.useState(0);\n  const [isApproving, setIsApproving] = React.useState(false);\n  const [selectedRecipe, setSelectedRecipe] = React.useState(COMMUNITY_RECIPES[0]);\n  const [machineState, send] = useService(service);\n  const isUnsaved = machineState.context.blockChain.isUnsaved(); // Every 10 seconds fetch the quickswap rate\n\n  useEffect(() => {\n    const load = async () => {\n      const rate = await machineState.context.blockChain.quickswapRate(); // Always suggest a bit higher to prevent slippage issues\n\n      const safeRate = rate * MATIC_MULTIPLIER;\n      console.log({\n        safeRate\n      });\n      setQuickSwapRate(safeRate);\n    };\n\n    load();\n    const interval = setInterval(() => {\n      load();\n    }, 10 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const changeRecipe = recipe => {\n    setAmount(1);\n    setSelectedRecipe(recipe);\n  };\n\n  const craft = () => {\n    setIsApproving(true);\n  };\n\n  console.log({\n    inventory\n  });\n  const boxes = COMMUNITY_RECIPES.map(recipe => ({\n    isSelected: recipe.name === selectedRecipe.name,\n    onClick: () => changeRecipe(recipe),\n    image: recipe.image,\n    count: inventory[recipe.name] || undefined\n  })); // Pad array with empty boxes\n\n  for (let i = boxes.length; i < 10; i++) {\n    boxes.push({\n      disabled: true\n    });\n  } // Currently only have statue supply so hardcode the rest to 5000\n\n\n  const amountLeft = selectedRecipe.supply && selectedRecipe.supply - totalItemSupplies[selectedRecipe.name];\n\n  if (isApproving) {\n    return /*#__PURE__*/_jsxDEV(CommunityApproval, {\n      balance: balance,\n      onClose: onClose,\n      recipe: selectedRecipe,\n      quickSwapRate: quickSwapRate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n  const Action = () => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"recipe-description\",\n      children: \"Locked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this);\n\n    if (isUnsaved) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upgrade-required\",\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          children: [\"Save your farm first\", /*#__PURE__*/_jsxDEV(\"img\", {\n            //src={cancel}\n            className: \"insufficient-funds-cross\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (selectedRecipe.supply && amountLeft === 0) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"recipe-description\",\n        children: \"No supply left \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: craft,\n        disabled: !canAfford,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"craft-button-text\",\n          children: \"Craft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const sunflowerTokenPrice = selectedRecipe.ingredients[0].amount;\n  const maticPrice = sunflowerTokenPrice * quickSwapRate;\n  const canAfford = balance >= sunflowerTokenPrice;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"crafting\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"community-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"community-title\",\n          children: \"Crowd Sourced Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"community-description\",\n          children: \"80% $SFF burnt into LP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"community-description\",\n          children: \"16% sent to the designer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"community-description\",\n          children: \"4% sent to the team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"crafting-items\",\n          children: boxes.map(box => /*#__PURE__*/_jsxDEV(Box, {\n            count: box.count,\n            onClick: box.onClick,\n            image: box.image,\n            isSelected: box.isSelected,\n            disabled: box.disabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"community-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://docs.sunflower-farmers.com/crafting-guide#crowd-sourced-crafting\",\n          target: \"_blank\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"current-price-supply-demand\",\n            children: \"Read more\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recipe\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `recipe-type recipe-nft`,\n        children: \"NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), selectedRecipe.supply && !isNaN(amountLeft) && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"nft-count\",\n        children: `${amountLeft} left!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"recipe-title\",\n        children: selectedRecipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"crafting-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedRecipe.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"recipe-description\",\n        children: selectedRecipe.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ingredients\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredient\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"ingredient-image\",\n              src: coin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ingredient-count\",\n              children: \"$SFF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `ingredient-text ${!canAfford && \"ingredient-insufficient\"}`,\n            children: sunflowerTokenPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredient\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"ingredient-image\",\n              src: matic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ingredient-count\",\n              children: \"$MATIC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `ingredient-text`,\n            children: maticPrice.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"craft-action\",\n        children: Action()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"recipe-description\",\n        children: [selectedRecipe.communityMember.twitterLink && /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: selectedRecipe.communityMember.twitterLink,\n          style: {\n            color: \"white\",\n            textDecoration: \"underline\"\n          },\n          children: selectedRecipe.communityMember.twitterName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectedRecipe.communityMember.discordName && /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"discord\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: discord\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), `@${selectedRecipe.communityMember.discordName}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"recipe-description\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: selectedRecipe.openSeaLink,\n          style: {\n            color: \"white\",\n            textDecoration: \"underline\"\n          },\n          children: \"View on OpenSea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommunityCrafting, \"UjHIHarpFMEGbnB6TvdSeP1gay8=\", false, function () {\n  return [useService];\n});\n\n_c3 = CommunityCrafting;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"COMMUNITY_RECIPES$recipes.filter\");\n$RefreshReg$(_c2, \"COMMUNITY_RECIPES\");\n$RefreshReg$(_c3, \"CommunityCrafting\");","map":{"version":3,"sources":["/home/jacob/Documents/Programming/myApp/src/dapp/components/ui/CommunityCrafting.tsx"],"names":["React","useEffect","Button","Message","service","matic","discord","coin","recipes","Box","useService","CommunityApproval","COMMUNITY_RECIPES","filter","recipe","communityMember","COMMISION","SLIPPAGE","MATIC_MULTIPLIER","CommunityCrafting","onClose","balance","inventory","totalItemSupplies","level","amount","setAmount","useState","quickSwapRate","setQuickSwapRate","isApproving","setIsApproving","selectedRecipe","setSelectedRecipe","machineState","send","isUnsaved","context","blockChain","load","rate","quickswapRate","safeRate","console","log","interval","setInterval","clearInterval","changeRecipe","craft","boxes","map","isSelected","name","onClick","image","count","undefined","i","length","push","disabled","amountLeft","supply","Action","canAfford","sunflowerTokenPrice","ingredients","maticPrice","box","isNaN","description","toFixed","twitterLink","color","textDecoration","twitterName","discordName","openSeaLink"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Panel } from \"../ui/Panel\";\nimport { Button } from \"../ui/Button\";\nimport { Message } from \"../ui/Message\";\nimport { InventoryItems } from \"../ui/InventoryItems\";\n\nimport {\n  Context,\n  BlockchainEvent,\n  BlockchainState,\n  service,\n} from \"../../machine\";\n\nimport hammer from \"../../images/ui/hammer.png\";\nimport basket from \"../../images/ui/basket.png\";\nimport building from \"../../images/buildings/side-house-2.png\";\n\nimport arrowUp from \"../../images/ui/arrow_up.png\";\nimport arrowDown from \"../../images/ui/arrow_down.png\";\nimport matic from \"../../images/ui/matic.png\";\nimport discord from \"../../images/ui/discord.jpeg\";\nimport coin from \"../../images/ui/icon.png\";\n\nimport { recipes, Recipe, Inventory, Item } from \"../../types/crafting\";\nimport { Box, BoxProps } from \"./Box\";\n\nimport \"./Crafting.css\";\nimport { useService } from \"@xstate/react\";\nimport { CommunityApproval } from \"./CommunityApproval\";\n\ninterface Props {\n  onClose: () => void;\n  balance: number;\n  inventory: Inventory;\n  totalItemSupplies: Inventory;\n  level: number;\n}\n\nconst COMMUNITY_RECIPES = recipes.filter(\n  (recipe) => !!recipe.communityMember\n);\n\n// 20% for designer, 5% for the team\nconst COMMISION = 0.25;\n\n// In case people take awhile to confirm the transaction\nconst SLIPPAGE = 0.02;\n\nconst MATIC_MULTIPLIER = 1 + COMMISION + SLIPPAGE;\n\nexport const CommunityCrafting: React.FC<Props> = ({\n  onClose,\n  balance,\n  inventory,\n  totalItemSupplies,\n  level,\n}) => {\n  const [amount, setAmount] = React.useState(1);\n  const [quickSwapRate, setQuickSwapRate] = React.useState(0);\n  const [isApproving, setIsApproving] = React.useState(false);\n  const [selectedRecipe, setSelectedRecipe] = React.useState(\n    COMMUNITY_RECIPES[0]\n  );\n  const [machineState, send] = useService<\n    Context,\n    BlockchainEvent,\n    BlockchainState\n  >(service);\n  const isUnsaved = machineState.context.blockChain.isUnsaved();\n\n  // Every 10 seconds fetch the quickswap rate\n  useEffect(() => {\n    const load = async () => {\n      const rate = await machineState.context.blockChain.quickswapRate();\n      // Always suggest a bit higher to prevent slippage issues\n      const safeRate = rate * MATIC_MULTIPLIER;\n      console.log({ safeRate });\n      setQuickSwapRate(safeRate);\n    };\n\n    load();\n\n    const interval = setInterval(() => {\n      load();\n    }, 10 * 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n  const changeRecipe = (recipe: Recipe) => {\n    setAmount(1);\n    setSelectedRecipe(recipe);\n  };\n\n  const craft = () => {\n    setIsApproving(true);\n  };\n\n  console.log({ inventory });\n\n  const boxes: BoxProps[] = COMMUNITY_RECIPES.map((recipe) => ({\n    isSelected: recipe.name === selectedRecipe.name,\n    onClick: () => changeRecipe(recipe),\n    image: recipe.image,\n    count: inventory[recipe.name] || undefined,\n  }));\n\n  // Pad array with empty boxes\n  for (let i = boxes.length; i < 10; i++) {\n    boxes.push({ disabled: true });\n  }\n\n  // Currently only have statue supply so hardcode the rest to 5000\n  const amountLeft =\n    selectedRecipe.supply &&\n    selectedRecipe.supply - totalItemSupplies[selectedRecipe.name];\n\n  if (isApproving) {\n    return (\n      <CommunityApproval\n        balance={balance}\n        onClose={onClose}\n        recipe={selectedRecipe}\n        quickSwapRate={quickSwapRate}\n      />\n    );\n  }\n\n  const Action = () => {\n    return <span id=\"recipe-description\">Locked</span>;\n\n    if (isUnsaved) {\n      return (\n        <div className=\"upgrade-required\">\n          <Message>\n            Save your farm first\n            <img\n              //src={cancel}\n              className=\"insufficient-funds-cross\"\n            />\n          </Message>\n        </div>\n      );\n    }\n\n    if (selectedRecipe.supply && amountLeft === 0) {\n      return <span id=\"recipe-description\">No supply left </span>;\n    }\n\n    return (\n      <>\n        <Button onClick={craft} disabled={!canAfford}>\n          <span id=\"craft-button-text\">Craft</span>\n        </Button>\n      </>\n    );\n  };\n\n  const sunflowerTokenPrice = selectedRecipe.ingredients[0].amount;\n  const maticPrice = sunflowerTokenPrice * quickSwapRate;\n  const canAfford = balance >= sunflowerTokenPrice;\n\n  return (\n    <div id=\"crafting\">\n      <div id=\"community-left\">\n        <div>\n          <span className=\"community-title\">Crowd Sourced Features</span>\n          <span className=\"community-description\">\n            80% $SFF burnt into LP\n          </span>\n          <span className=\"community-description\">\n            16% sent to the designer\n          </span>\n          <span className=\"community-description\">\n            4% sent to the team\n          </span>\n          <div id=\"crafting-items\">\n            {boxes.map((box) => (\n              <Box\n                count={box.count}\n                onClick={box.onClick}\n                image={box.image}\n                isSelected={box.isSelected}\n                disabled={box.disabled}\n              />\n            ))}\n          </div>\n        </div>\n        <div id=\"community-footer\">\n          <a\n            href=\"https://docs.sunflower-farmers.com/crafting-guide#crowd-sourced-crafting\"\n            target=\"_blank\"\n          >\n            <h3 className=\"current-price-supply-demand\">Read more</h3>\n          </a>\n        </div>\n      </div>\n      <div id=\"recipe\">\n        <span className={`recipe-type recipe-nft`}>NFT</span>\n        {selectedRecipe.supply && !isNaN(amountLeft) && (\n          <span className=\"nft-count\">{`${amountLeft} left!`}</span>\n        )}\n        <span id=\"recipe-title\">{selectedRecipe.name}</span>\n        <div id=\"crafting-item\">\n          <img src={selectedRecipe.image} />\n        </div>\n        <span id=\"recipe-description\">{selectedRecipe.description}</span>\n\n        <div id=\"ingredients\">\n          <div className=\"ingredient\">\n            <div>\n              <img className=\"ingredient-image\" src={coin} />\n              <span className=\"ingredient-count\">$SFF</span>\n            </div>\n            <span\n              className={`ingredient-text ${\n                !canAfford && \"ingredient-insufficient\"\n              }`}\n            >\n              {sunflowerTokenPrice}\n            </span>\n          </div>\n          <div className=\"ingredient\">\n            <div>\n              <img className=\"ingredient-image\" src={matic} />\n              <span className=\"ingredient-count\">$MATIC</span>\n            </div>\n            <span className={`ingredient-text`}>\n              {maticPrice.toFixed(2)}\n            </span>\n          </div>\n        </div>\n\n        <div id=\"craft-action\">{Action()}</div>\n        <span id=\"recipe-description\">\n          {selectedRecipe.communityMember.twitterLink && (\n            <a\n              target=\"_blank\"\n              href={selectedRecipe.communityMember.twitterLink}\n              style={{ color: \"white\", textDecoration: \"underline\" }}\n            >\n              {selectedRecipe.communityMember.twitterName}\n            </a>\n          )}\n          <div>\n            {selectedRecipe.communityMember.discordName && (\n              <span id=\"discord\">\n                <img src={discord} />\n                {`@${selectedRecipe.communityMember.discordName}`}\n              </span>\n            )}\n          </div>\n        </span>\n        <span id=\"recipe-description\">\n          <a\n            target=\"_blank\"\n            href={selectedRecipe.openSeaLink}\n            style={{ color: \"white\", textDecoration: \"underline\" }}\n          >\n            View on OpenSea\n          </a>\n        </span>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/Programming/myApp/src/dapp/components/farm/Land.tsx\";\nimport React from \"react\";\nimport \"./Land.css\";\nimport waterEdge from \"../../images/water/edge.png\";\nimport { FirstBlock } from \"./FirstBlock\";\nimport { SecondLand } from \"./SecondBlock\";\nimport { ThirdBlock } from \"./ThirdBlock\";\nimport { FourthBlock } from \"./FourthBlock\";\nimport { FifthBlock } from \"./FifthBlock\";\nimport { Tiles } from \"./Tiles\";\nimport { Trees } from \"./NewTrees\";\nimport { Stones } from \"./NewStone\";\nimport { NFTs } from \"./NFTs\";\nimport { Chickens } from \"./Chickens\";\nimport { Iron } from \"./Iron\";\nimport { Gold } from \"./Gold\";\nimport { Barn } from \"./Barn\";\nimport { Blacksmith } from \"./Blacksmith\";\nimport { Market } from \"./Market\";\nimport { Reward } from \"./Reward\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = Array(60).fill(null);\nconst rows = Array(20).fill(null); // based on the amount of fields, determine the level\n\nconst landToLevel = {\n  5: 1,\n  8: 2,\n  11: 3,\n  14: 4,\n  17: 5\n};\nexport const Land = _ref => {\n  let {\n    fruits,\n    land,\n    balance,\n    onHarvest,\n    onPlant,\n    selectedItem,\n    account,\n    inventory,\n    totalItemSupplies\n  } = _ref;\n  const level = landToLevel[land.length];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [columns.map((_, column) => rows.map((_, row) => (column + row) % 2 ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grass1\",\n      style: {\n        position: \"absolute\",\n        left: `calc(${(column - 25) * 62.5}px + 18px)`,\n        top: `${row * 62.5}px`,\n        width: \"62.5px\",\n        height: \"62.5px\",\n        background: \"#5fc24b\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this))), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"farm\",\n      children: [/*#__PURE__*/_jsxDEV(FirstBlock, {\n        fruits: fruits,\n        selectedItem: selectedItem,\n        land: land,\n        balance: balance,\n        onHarvest: onHarvest,\n        onPlant: onPlant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SecondLand, {\n        fruits: fruits,\n        selectedItem: selectedItem,\n        land: land,\n        balance: balance,\n        onHarvest: onHarvest,\n        onPlant: onPlant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThirdBlock, {\n        fruits: fruits,\n        selectedItem: selectedItem,\n        land: land,\n        balance: balance,\n        onHarvest: onHarvest,\n        onPlant: onPlant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FourthBlock, {\n        fruits: fruits,\n        selectedItem: selectedItem,\n        land: land,\n        balance: balance,\n        onHarvest: onHarvest,\n        onPlant: onPlant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FifthBlock, {\n        fruits: fruits,\n        selectedItem: selectedItem,\n        land: land,\n        balance: balance,\n        onHarvest: onHarvest,\n        onPlant: onPlant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Trees, {\n        inventory: inventory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stones, {\n        inventory: inventory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Iron, {\n        inventory: inventory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Gold, {\n        inventory: inventory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chickens, {\n        inventory: inventory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NFTs, {\n        inventory: inventory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Barn, {\n        farmSize: land.length,\n        balance: balance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Blacksmith, {\n        inventory: inventory,\n        totalItemSupplies: totalItemSupplies,\n        balance: balance,\n        level: level\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Market, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tiles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Reward, {\n        account: account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), new Array(50).fill(null).map((_, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"water-edge\",\n      src: waterEdge,\n      style: {\n        position: \"absolute\",\n        left: `${index * 62.5}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"water\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Land;\n\nvar _c;\n\n$RefreshReg$(_c, \"Land\");","map":{"version":3,"sources":["/home/jacob/Documents/Programming/myApp/src/dapp/components/farm/Land.tsx"],"names":["React","waterEdge","FirstBlock","SecondLand","ThirdBlock","FourthBlock","FifthBlock","Tiles","Trees","Stones","NFTs","Chickens","Iron","Gold","Barn","Blacksmith","Market","Reward","columns","Array","fill","rows","landToLevel","Land","fruits","land","balance","onHarvest","onPlant","selectedItem","account","inventory","totalItemSupplies","level","length","map","_","column","row","position","left","top","width","height","background","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,YAAP;AAIA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAgBA,MAAMC,OAAO,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,IAAf,CAAhB;AACA,MAAMC,IAAI,GAAGF,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,IAAf,CAAb,C,CAEA;;AACA,MAAME,WAAW,GAAG;AAClB,KAAG,CADe;AAElB,KAAG,CAFe;AAGlB,MAAI,CAHc;AAIlB,MAAI,CAJc;AAKlB,MAAI;AALc,CAApB;AAQA,OAAO,MAAMC,IAAqB,GAAG,QAU/B;AAAA,MAVgC;AACpCC,IAAAA,MADoC;AAEpCC,IAAAA,IAFoC;AAGpCC,IAAAA,OAHoC;AAIpCC,IAAAA,SAJoC;AAKpCC,IAAAA,OALoC;AAMpCC,IAAAA,YANoC;AAOpCC,IAAAA,OAPoC;AAQpCC,IAAAA,SARoC;AASpCC,IAAAA;AAToC,GAUhC;AACJ,QAAMC,KAAK,GAAGX,WAAW,CAACG,IAAI,CAACS,MAAN,CAAzB;AAEA,sBACE;AAAA,eACGhB,OAAO,CAACiB,GAAR,CAAY,CAACC,CAAD,EAAIC,MAAJ,KACXhB,IAAI,CAACc,GAAL,CAAS,CAACC,CAAD,EAAIE,GAAJ,KACP,CAACD,MAAM,GAAGC,GAAV,IAAiB,CAAjB,GAAqB,IAArB,gBACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,IAAI,EAAG,QAAO,CAACH,MAAM,GAAG,EAAV,IAAgB,IAAK,YAF9B;AAGLI,QAAAA,GAAG,EAAG,GAAEH,GAAG,GAAG,IAAK,IAHd;AAILI,QAAAA,KAAK,EAAE,QAJF;AAKLC,QAAAA,MAAM,EAAE,QALH;AAMLC,QAAAA,UAAU,EAAE;AANP;AAFT;AAAA;AAAA;AAAA;AAAA,YAFJ,CADD,CADH,eAkBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,MAAM,EAAEpB,MADV;AAEE,QAAA,YAAY,EAAEK,YAFhB;AAGE,QAAA,IAAI,EAAEJ,IAHR;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,SAAS,EAAEC,SALb;AAME,QAAA,OAAO,EAAEC;AANX;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,UAAD;AACE,QAAA,MAAM,EAAEJ,MADV;AAEE,QAAA,YAAY,EAAEK,YAFhB;AAGE,QAAA,IAAI,EAAEJ,IAHR;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,SAAS,EAAEC,SALb;AAME,QAAA,OAAO,EAAEC;AANX;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE,QAAC,UAAD;AACE,QAAA,MAAM,EAAEJ,MADV;AAEE,QAAA,YAAY,EAAEK,YAFhB;AAGE,QAAA,IAAI,EAAEJ,IAHR;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,SAAS,EAAEC,SALb;AAME,QAAA,OAAO,EAAEC;AANX;AAAA;AAAA;AAAA;AAAA,cAjBF,eAyBE,QAAC,WAAD;AACE,QAAA,MAAM,EAAEJ,MADV;AAEE,QAAA,YAAY,EAAEK,YAFhB;AAGE,QAAA,IAAI,EAAEJ,IAHR;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,SAAS,EAAEC,SALb;AAME,QAAA,OAAO,EAAEC;AANX;AAAA;AAAA;AAAA;AAAA,cAzBF,eAiCE,QAAC,UAAD;AACE,QAAA,MAAM,EAAEJ,MADV;AAEE,QAAA,YAAY,EAAEK,YAFhB;AAGE,QAAA,IAAI,EAAEJ,IAHR;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,SAAS,EAAEC,SALb;AAME,QAAA,OAAO,EAAEC;AANX;AAAA;AAAA;AAAA;AAAA,cAjCF,eA0CE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEG;AAAlB;AAAA;AAAA;AAAA;AAAA,cA1CF,eA2CE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,cA3CF,eA4CE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cA5CF,eA6CE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cA7CF,eA+CE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,cA/CF,eAgDE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cAhDF,eAkDE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEN,IAAI,CAACS,MAArB;AAA6B,QAAA,OAAO,EAAER;AAAtC;AAAA;AAAA;AAAA;AAAA,cAlDF,eAmDE,QAAC,UAAD;AACE,QAAA,SAAS,EAAEK,SADb;AAEE,QAAA,iBAAiB,EAAEC,iBAFrB;AAGE,QAAA,OAAO,EAAEN,OAHX;AAIE,QAAA,KAAK,EAAEO;AAJT;AAAA;AAAA;AAAA;AAAA,cAnDF,eAyDE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAzDF,eA0DE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cA1DF,eA2DE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,cA3DF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,EAuFG,IAAIX,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,IAAnB,EAAyBe,GAAzB,CAA6B,CAACC,CAAD,EAAIS,KAAJ,kBAC5B;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,GAAG,EAAE5C,SAFP;AAGE,MAAA,KAAK,EAAE;AACLsC,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,IAAI,EAAG,GAAEK,KAAK,GAAG,IAAK;AAFjB;AAHT;AAAA;AAAA;AAAA;AAAA,YADD,CAvFH,eAkGE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAlGF;AAAA,kBADF;AAsGD,CAnHM;KAAMtB,I","sourcesContent":["import React from \"react\";\n\nimport \"./Land.css\";\n\nimport { Square, Fruit, ActionableItem } from \"../../types/contract\";\n\nimport waterEdge from \"../../images/water/edge.png\";\n\nimport { FirstBlock } from \"./FirstBlock\";\nimport { SecondLand } from \"./SecondBlock\";\nimport { ThirdBlock } from \"./ThirdBlock\";\nimport { FourthBlock } from \"./FourthBlock\";\nimport { FifthBlock } from \"./FifthBlock\";\nimport { Tiles } from \"./Tiles\";\nimport { Trees } from \"./NewTrees\";\nimport { Stones } from \"./NewStone\";\nimport { NFTs } from \"./NFTs\";\nimport { Chickens } from \"./Chickens\";\nimport { Iron } from \"./Iron\";\nimport { Gold } from \"./Gold\";\nimport { Barn } from \"./Barn\";\nimport { Blacksmith } from \"./Blacksmith\";\nimport { Market } from \"./Market\";\nimport { Reward } from \"./Reward\";\nimport { FruitItem } from \"../../types/fruits\";\nimport { Inventory, Supply } from \"../../types/crafting\";\n\ninterface Props {\n  land: Square[];\n  balance: number;\n  onHarvest: (landIndex: number) => void;\n  onPlant: (landIndex: number) => void;\n  selectedItem: ActionableItem;\n  fruits: FruitItem[];\n  account?: string;\n  inventory: Inventory;\n  totalItemSupplies: Inventory;\n}\n\nconst columns = Array(60).fill(null);\nconst rows = Array(20).fill(null);\n\n// based on the amount of fields, determine the level\nconst landToLevel = {\n  5: 1,\n  8: 2,\n  11: 3,\n  14: 4,\n  17: 5,\n};\n\nexport const Land: React.FC<Props> = ({\n  fruits,\n  land,\n  balance,\n  onHarvest,\n  onPlant,\n  selectedItem,\n  account,\n  inventory,\n  totalItemSupplies,\n}) => {\n  const level = landToLevel[land.length];\n\n  return (\n    <>\n      {columns.map((_, column) =>\n        rows.map((_, row) =>\n          (column + row) % 2 ? null : (\n            <div\n              className=\"grass1\"\n              style={{\n                position: \"absolute\",\n                left: `calc(${(column - 25) * 62.5}px + 18px)`,\n                top: `${row * 62.5}px`,\n                width: \"62.5px\",\n                height: \"62.5px\",\n                background: \"#5fc24b\",\n              }}\n            />\n          )\n        )\n      )}\n      <div className=\"farm\">\n        <FirstBlock\n          fruits={fruits}\n          selectedItem={selectedItem}\n          land={land}\n          balance={balance}\n          onHarvest={onHarvest}\n          onPlant={onPlant}\n        />\n        <SecondLand\n          fruits={fruits}\n          selectedItem={selectedItem}\n          land={land}\n          balance={balance}\n          onHarvest={onHarvest}\n          onPlant={onPlant}\n        />\n        <ThirdBlock\n          fruits={fruits}\n          selectedItem={selectedItem}\n          land={land}\n          balance={balance}\n          onHarvest={onHarvest}\n          onPlant={onPlant}\n        />\n        <FourthBlock\n          fruits={fruits}\n          selectedItem={selectedItem}\n          land={land}\n          balance={balance}\n          onHarvest={onHarvest}\n          onPlant={onPlant}\n        />\n        <FifthBlock\n          fruits={fruits}\n          selectedItem={selectedItem}\n          land={land}\n          balance={balance}\n          onHarvest={onHarvest}\n          onPlant={onPlant}\n        />\n\n        <Trees inventory={inventory} />\n        <Stones inventory={inventory} />\n        <Iron inventory={inventory} />\n        <Gold inventory={inventory} />\n\n        <Chickens inventory={inventory} />\n        <NFTs inventory={inventory} />\n\n        <Barn farmSize={land.length} balance={balance} />\n        <Blacksmith\n          inventory={inventory}\n          totalItemSupplies={totalItemSupplies}\n          balance={balance}\n          level={level}\n        />\n        <Market />\n        <Tiles />\n        <Reward account={account} />\n\n        {/* {\n                    land.map((square, index) => (\n                        <Field square={square} onClick={square.fruit === Fruit.None ? () => onPlant(index) : () => onHarvest(index)}/> \n                    ))\n                } */}\n      </div>\n\n      {/* Water */}\n      {new Array(50).fill(null).map((_, index) => (\n        <img\n          className=\"water-edge\"\n          src={waterEdge}\n          style={{\n            position: \"absolute\",\n            left: `${index * 62.5}px`,\n          }}\n        />\n      ))}\n\n      <div id=\"water\" />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
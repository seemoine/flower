{"ast":null,"code":"var _jsxFileName = \"/home/jacob/Documents/Programming/myApp/src/dapp/components/ui/Tools.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button } from \"../ui/Button\";\nimport { Message } from \"../ui/Message\";\nimport { InventoryItems } from \"../ui/InventoryItems\";\nimport { service } from \"../../machine\";\nimport basket from \"../../images/ui/basket.png\";\nimport arrowUp from \"../../images/ui/arrow_up.png\";\nimport arrowDown from \"../../images/ui/arrow_down.png\";\nimport { recipes } from \"../../types/crafting\";\nimport { Box } from \"./Box\";\nimport \"./Crafting.css\";\nimport { useService } from \"@xstate/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TOOLS = recipes.filter(_c = recipe => recipe.type === \"ERC20\" && !recipe.communityMember);\n_c2 = TOOLS;\nexport const Tools = _ref => {\n  _s();\n\n  let {\n    onClose,\n    balance,\n    inventory,\n    totalItemSupplies,\n    level\n  } = _ref;\n  const [amount, setAmount] = React.useState(1);\n  const [selectedRecipe, setSelectedRecipe] = React.useState(TOOLS[0]);\n  const [machineState, send] = useService(service);\n  const isUnsaved = machineState.context.blockChain.isUnsaved();\n\n  const changeRecipe = recipe => {\n    setAmount(1);\n    setSelectedRecipe(recipe);\n  };\n\n  const craft = () => {\n    service.send(\"CRAFT\", {\n      recipe: selectedRecipe,\n      amount\n    });\n    onClose();\n  };\n\n  const boxes = TOOLS.map(recipe => ({\n    isSelected: recipe.name === selectedRecipe.name,\n    onClick: () => changeRecipe(recipe),\n    image: recipe.image\n  })); // Pad array with empty boxes\n\n  for (let i = boxes.length; i < 10; i++) {\n    boxes.push({\n      disabled: true\n    });\n  }\n\n  const ingredientList = selectedRecipe.ingredients.map(ingredient => {\n    const inventoryCount = ingredient.name === \"$SFF\" ? balance : inventory[ingredient.name];\n    const price = ingredient.amount * amount;\n    return {\n      name: ingredient.name,\n      image: ingredient.image,\n      price,\n      canAfford: inventoryCount >= price\n    };\n  });\n\n  const Action = () => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"recipe-description\",\n      children: \"Locked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n\n    if (isUnsaved) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upgrade-required\",\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          children: [\"Save your farm first\", /*#__PURE__*/_jsxDEV(\"img\", {\n            //src={cancel}\n            className: \"insufficient-funds-cross\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"craft-count\",\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          children: amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"arrow-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"craft-arrow\",\n            alt: \"Step up donation value\",\n            src: arrowUp,\n            onClick: () => setAmount(r => r + 1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), amount > 1 && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"craft-arrow\",\n            alt: \"Step down donation value\",\n            src: arrowDown,\n            onClick: () => setAmount(r => r - 1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: craft,\n        disabled: !canAfford,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"craft-button-text\",\n          children: \"Craft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const canAfford = ingredientList.every(ingredient => ingredient.canAfford);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"crafting\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"crafting-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"crafting-items\",\n        children: boxes.map(box => /*#__PURE__*/_jsxDEV(Box, {\n          count: box.count,\n          onClick: box.onClick,\n          image: box.image,\n          isSelected: box.isSelected,\n          disabled: box.disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inventory-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: basket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"inventory\",\n        children: /*#__PURE__*/_jsxDEV(InventoryItems, {\n          inventory: inventory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://docs.sunflower-farmers.com/crafting-guide\",\n        target: \"_blank\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"current-price-supply-demand\",\n          children: \"Read more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recipe\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `recipe-type recipe-erc20`,\n        children: \"ERC20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"recipe-title\",\n        children: selectedRecipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"crafting-item\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedRecipe.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"recipe-description\",\n        children: selectedRecipe.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ingredients\",\n        children: ingredientList.map(ingredient => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ingredient\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"ingredient-image\",\n              src: ingredient.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ingredient-count\",\n              children: ingredient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `ingredient-text ${!ingredient.canAfford && \"ingredient-insufficient\"}`,\n            children: ingredient.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"craft-action\",\n        children: Action()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tools, \"CbkVEDo6JIzdTRN38U4t2Hq2uqo=\", false, function () {\n  return [useService];\n});\n\n_c3 = Tools;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TOOLS$recipes.filter\");\n$RefreshReg$(_c2, \"TOOLS\");\n$RefreshReg$(_c3, \"Tools\");","map":{"version":3,"sources":["/home/jacob/Documents/Programming/myApp/src/dapp/components/ui/Tools.tsx"],"names":["React","Button","Message","InventoryItems","service","basket","arrowUp","arrowDown","recipes","Box","useService","TOOLS","filter","recipe","type","communityMember","Tools","onClose","balance","inventory","totalItemSupplies","level","amount","setAmount","useState","selectedRecipe","setSelectedRecipe","machineState","send","isUnsaved","context","blockChain","changeRecipe","craft","boxes","map","isSelected","name","onClick","image","i","length","push","disabled","ingredientList","ingredients","ingredient","inventoryCount","price","canAfford","Action","r","every","box","count","description"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { Button } from \"../ui/Button\";\nimport { Message } from \"../ui/Message\";\nimport { InventoryItems } from \"../ui/InventoryItems\";\n\nimport {\n  Context,\n  BlockchainEvent,\n  BlockchainState,\n  service,\n} from \"../../machine\";\n\nimport hammer from \"../../images/ui/hammer.png\";\nimport basket from \"../../images/ui/basket.png\";\n\nimport arrowUp from \"../../images/ui/arrow_up.png\";\nimport arrowDown from \"../../images/ui/arrow_down.png\";\n\nimport { recipes, Recipe, Inventory, Item } from \"../../types/crafting\";\nimport { Box, BoxProps } from \"./Box\";\n\nimport \"./Crafting.css\";\nimport { useService } from \"@xstate/react\";\n\ninterface Props {\n  onClose: () => void;\n  balance: number;\n  inventory: Inventory;\n  totalItemSupplies: Inventory;\n  level: number;\n}\n\nconst TOOLS = recipes.filter(\n  (recipe) => recipe.type === \"ERC20\" && !recipe.communityMember\n);\n\nexport const Tools: React.FC<Props> = ({\n  onClose,\n  balance,\n  inventory,\n  totalItemSupplies,\n  level,\n}) => {\n  const [amount, setAmount] = React.useState(1);\n  const [selectedRecipe, setSelectedRecipe] = React.useState(TOOLS[0]);\n  const [machineState, send] = useService<\n    Context,\n    BlockchainEvent,\n    BlockchainState\n  >(service);\n  const isUnsaved = machineState.context.blockChain.isUnsaved();\n\n  const changeRecipe = (recipe: Recipe) => {\n    setAmount(1);\n    setSelectedRecipe(recipe);\n  };\n\n  const craft = () => {\n    service.send(\"CRAFT\", {\n      recipe: selectedRecipe,\n      amount,\n    });\n    onClose();\n  };\n\n  const boxes: BoxProps[] = TOOLS.map((recipe) => ({\n    isSelected: recipe.name === selectedRecipe.name,\n    onClick: () => changeRecipe(recipe),\n    image: recipe.image,\n  }));\n\n  // Pad array with empty boxes\n  for (let i = boxes.length; i < 10; i++) {\n    boxes.push({ disabled: true });\n  }\n\n  const ingredientList = selectedRecipe.ingredients.map((ingredient) => {\n    const inventoryCount =\n      ingredient.name === \"$SFF\" ? balance : inventory[ingredient.name];\n    const price = ingredient.amount * amount;\n    return {\n      name: ingredient.name,\n      image: ingredient.image,\n      price,\n      canAfford: inventoryCount >= price,\n    };\n  });\n\n  const Action = () => {\n    return <span id=\"recipe-description\">Locked</span>;\n\n    if (isUnsaved) {\n      return (\n        <div className=\"upgrade-required\">\n          <Message>\n            Save your farm first\n            <img\n              //src={cancel}\n              className=\"insufficient-funds-cross\"\n            />\n          </Message>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div id=\"craft-count\">\n          <Message>{amount}</Message>\n          <div id=\"arrow-container\">\n            <img\n              className=\"craft-arrow\"\n              alt=\"Step up donation value\"\n              src={arrowUp}\n              onClick={() => setAmount((r) => r + 1)}\n            />\n            {amount > 1 && (\n              <img\n                className=\"craft-arrow\"\n                alt=\"Step down donation value\"\n                src={arrowDown}\n                onClick={() => setAmount((r) => r - 1)}\n              />\n            )}\n          </div>\n        </div>\n        <Button onClick={craft} disabled={!canAfford}>\n          <span id=\"craft-button-text\">Craft</span>\n        </Button>\n      </>\n    );\n  };\n\n  const canAfford = ingredientList.every(\n    (ingredient) => ingredient.canAfford\n  );\n\n  return (\n    <div id=\"crafting\">\n      <div id=\"crafting-left\">\n        <div id=\"crafting-items\">\n          {boxes.map((box) => (\n            <Box\n              count={box.count}\n              onClick={box.onClick}\n              image={box.image}\n              isSelected={box.isSelected}\n              disabled={box.disabled}\n            />\n          ))}\n        </div>\n        <div id=\"inventory-header\">\n          <img src={basket} />\n          <span>Inventory</span>\n        </div>\n        <div id=\"inventory\">\n          <InventoryItems inventory={inventory} />\n        </div>\n        <a\n          href=\"https://docs.sunflower-farmers.com/crafting-guide\"\n          target=\"_blank\"\n        >\n          <h3 className=\"current-price-supply-demand\">Read more</h3>\n        </a>\n      </div>\n      <div id=\"recipe\">\n        <span className={`recipe-type recipe-erc20`}>ERC20</span>\n        <span id=\"recipe-title\">{selectedRecipe.name}</span>\n        <div id=\"crafting-item\">\n          <img src={selectedRecipe.image} />\n        </div>\n        <span id=\"recipe-description\">{selectedRecipe.description}</span>\n\n        <div id=\"ingredients\">\n          {ingredientList.map((ingredient) => (\n            <div className=\"ingredient\">\n              <div>\n                <img className=\"ingredient-image\" src={ingredient.image} />\n                <span className=\"ingredient-count\">{ingredient.name}</span>\n              </div>\n              <span\n                className={`ingredient-text ${\n                  !ingredient.canAfford && \"ingredient-insufficient\"\n                }`}\n              >\n                {ingredient.price}\n              </span>\n            </div>\n          ))}\n        </div>\n        <div id=\"craft-action\">{Action()}</div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Big from \"big.js\";\nimport sunflower from \"../images/sunflower/fruit.png\";\nimport pumpkin from \"../images/pumpkin/fruit.png\";\nimport beetroot from \"../images/beetroot/fruit.png\";\nimport cauliflower from \"../images/cauliflower/fruit.png\";\nimport potato from \"../images/potato/fruit.png\";\nimport radish from \"../images/radish/fruit.png\";\nimport parsnip from \"../images/parsnip/fruit.png\";\nexport let Fruit;\n\n(function (Fruit) {\n  Fruit[\"None\"] = \"0\";\n  Fruit[\"Sunflower\"] = \"1\";\n  Fruit[\"Potato\"] = \"2\";\n  Fruit[\"Pumpkin\"] = \"3\";\n  Fruit[\"Beetroot\"] = \"4\";\n  Fruit[\"Cauliflower\"] = \"5\";\n  Fruit[\"Parsnip\"] = \"6\";\n  Fruit[\"Radish\"] = \"7\";\n})(Fruit || (Fruit = {}));\n\nexport const FRUITS = [{\n  fruit: Fruit.Sunflower,\n  name: \"Sunflower\",\n  image: sunflower,\n  buyPrice: 0.01,\n  sellPrice: 0.02,\n  landRequired: 5,\n  harvestMinutes: 1\n}, {\n  fruit: Fruit.Potato,\n  name: \"Potato\",\n  image: potato,\n  buyPrice: 0.1,\n  sellPrice: 0.16,\n  landRequired: 5,\n  harvestMinutes: 5\n}, {\n  fruit: Fruit.Pumpkin,\n  name: \"Pumpkin\",\n  image: pumpkin,\n  buyPrice: 0.4,\n  sellPrice: 0.8,\n  landRequired: 8,\n  harvestMinutes: 60\n}, {\n  fruit: Fruit.Beetroot,\n  name: \"Beetroot\",\n  image: beetroot,\n  buyPrice: 1,\n  sellPrice: 1.8,\n  landRequired: 8,\n  harvestMinutes: 4 * 60\n}, {\n  fruit: Fruit.Cauliflower,\n  name: \"Cauliflower\",\n  image: cauliflower,\n  buyPrice: 4,\n  sellPrice: 8,\n  landRequired: 11,\n  harvestMinutes: 8 * 60\n}, {\n  fruit: Fruit.Parsnip,\n  name: \"Parsnip\",\n  image: parsnip,\n  buyPrice: 10,\n  sellPrice: 16,\n  landRequired: 14,\n  harvestMinutes: 24 * 60\n}, {\n  fruit: Fruit.Radish,\n  name: \"Radish\",\n  image: radish,\n  buyPrice: 50,\n  sellPrice: 80,\n  landRequired: 17,\n  harvestMinutes: 3 * 24 * 60\n}];\nexport function getFruit(fruit) {\n  return FRUITS.find(item => item.fruit === fruit);\n} // Apply the market rate against to get the current buy and sell prices\n\nexport function getMarketFruits(marketRate) {\n  console.log({\n    marketRate\n  });\n  return FRUITS.map(fruit => ({ ...fruit,\n    buyPrice: Big(fruit.buyPrice).div(marketRate).toNumber(),\n    sellPrice: Big(fruit.sellPrice).div(marketRate).toNumber()\n  }));\n}","map":{"version":3,"sources":["/home/jacob/Documents/Programming/myApp/src/dapp/types/fruits.ts"],"names":["Big","sunflower","pumpkin","beetroot","cauliflower","potato","radish","parsnip","Fruit","FRUITS","fruit","Sunflower","name","image","buyPrice","sellPrice","landRequired","harvestMinutes","Potato","Pumpkin","Beetroot","Cauliflower","Parsnip","Radish","getFruit","find","item","getMarketFruits","marketRate","console","log","map","div","toNumber"],"mappings":"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","sourcesContent":["import Big from \"big.js\";\n\nimport sunflower from \"../images/sunflower/fruit.png\";\nimport pumpkin from \"../images/pumpkin/fruit.png\";\nimport beetroot from \"../images/beetroot/fruit.png\";\nimport cauliflower from \"../images/cauliflower/fruit.png\";\nimport potato from \"../images/potato/fruit.png\";\nimport radish from \"../images/radish/fruit.png\";\nimport parsnip from \"../images/parsnip/fruit.png\";\n\nexport enum Fruit {\n  None = \"0\",\n  Sunflower = \"1\",\n  Potato = \"2\",\n  Pumpkin = \"3\",\n  Beetroot = \"4\",\n  Cauliflower = \"5\",\n  Parsnip = \"6\",\n  Radish = \"7\",\n}\n\nexport interface FruitItem {\n  fruit: Fruit;\n  name: string;\n  image: string;\n  buyPrice: number;\n  sellPrice: number;\n  landRequired: number;\n  harvestMinutes: number;\n}\n\nexport const FRUITS: FruitItem[] = [\n  {\n    fruit: Fruit.Sunflower,\n    name: \"Sunflower\",\n    image: sunflower,\n    buyPrice: 0.01,\n    sellPrice: 0.02,\n    landRequired: 5,\n    harvestMinutes: 1,\n  },\n  {\n    fruit: Fruit.Potato,\n    name: \"Potato\",\n    image: potato,\n    buyPrice: 0.1,\n    sellPrice: 0.16,\n    landRequired: 5,\n    harvestMinutes: 5,\n  },\n  {\n    fruit: Fruit.Pumpkin,\n    name: \"Pumpkin\",\n    image: pumpkin,\n    buyPrice: 0.4,\n    sellPrice: 0.8,\n    landRequired: 8,\n    harvestMinutes: 60,\n  },\n  {\n    fruit: Fruit.Beetroot,\n    name: \"Beetroot\",\n    image: beetroot,\n    buyPrice: 1,\n    sellPrice: 1.8,\n    landRequired: 8,\n    harvestMinutes: 4 * 60,\n  },\n  {\n    fruit: Fruit.Cauliflower,\n    name: \"Cauliflower\",\n    image: cauliflower,\n    buyPrice: 4,\n    sellPrice: 8,\n    landRequired: 11,\n    harvestMinutes: 8 * 60,\n  },\n  {\n    fruit: Fruit.Parsnip,\n    name: \"Parsnip\",\n    image: parsnip,\n    buyPrice: 10,\n    sellPrice: 16,\n    landRequired: 14,\n    harvestMinutes: 24 * 60,\n  },\n  {\n    fruit: Fruit.Radish,\n    name: \"Radish\",\n    image: radish,\n    buyPrice: 50,\n    sellPrice: 80,\n    landRequired: 17,\n    harvestMinutes: 3 * 24 * 60,\n  },\n];\n\nexport function getFruit(fruit: Fruit) {\n  return FRUITS.find((item) => item.fruit === fruit);\n}\n\n// Apply the market rate against to get the current buy and sell prices\nexport function getMarketFruits(marketRate: number) {\n  console.log({ marketRate });\n  return FRUITS.map((fruit) => ({\n    ...fruit,\n    buyPrice: Big(fruit.buyPrice).div(marketRate).toNumber(),\n    sellPrice: Big(fruit.sellPrice).div(marketRate).toNumber(),\n  }));\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export function secondsToString(seconds) {\n  if (seconds <= 60) {\n    return \"1min\";\n  } // Less than 1 hour\n\n\n  if (seconds < 60 * 60) {\n    return `${Math.ceil(seconds / 60)}mins`;\n  }\n\n  if (seconds === 60 * 60) {\n    return \"1hr\";\n  }\n\n  if (seconds < 60 * 60 * 24) {\n    return `${Math.ceil(seconds / 60 / 60)}hrs`;\n  }\n\n  if (seconds === 60 * 60 * 24) {\n    return \"1day\";\n  }\n\n  return `${Math.ceil(seconds / 60 / 60 / 24)}days`;\n}\nexport function secondsToLongString(time) {\n  const seconds = Math.floor(time % 60);\n  const minutes = Math.floor(time / 60 % 60);\n  const hours = Math.floor(time / 60 / 60 % 24);\n  const days = Math.floor(time / 60 / 60 / 24);\n  return [days && `${days}days`, hours && `${hours}hrs`, minutes && `${minutes}mins`, seconds && `${seconds}s`].filter(Boolean).join(\" \");\n}","map":{"version":3,"sources":["/home/jacob/Documents/Programming/myApp/src/dapp/utils/time.ts"],"names":["secondsToString","seconds","Math","ceil","secondsToLongString","time","floor","minutes","hours","days","filter","Boolean","join"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,OAAzB,EAA0C;AAC/C,MAAIA,OAAO,IAAI,EAAf,EAAmB;AACjB,WAAO,MAAP;AACD,GAH8C,CAK/C;;;AACA,MAAIA,OAAO,GAAG,KAAK,EAAnB,EAAuB;AACrB,WAAQ,GAAEC,IAAI,CAACC,IAAL,CAAUF,OAAO,GAAG,EAApB,CAAwB,MAAlC;AACD;;AAED,MAAIA,OAAO,KAAK,KAAK,EAArB,EAAyB;AACvB,WAAO,KAAP;AACD;;AAED,MAAIA,OAAO,GAAG,KAAK,EAAL,GAAU,EAAxB,EAA4B;AAC1B,WAAQ,GAAEC,IAAI,CAACC,IAAL,CAAUF,OAAO,GAAG,EAAV,GAAe,EAAzB,CAA6B,KAAvC;AACD;;AAED,MAAIA,OAAO,KAAK,KAAK,EAAL,GAAU,EAA1B,EAA8B;AAC5B,WAAO,MAAP;AACD;;AAED,SAAQ,GAAEC,IAAI,CAACC,IAAL,CAAUF,OAAO,GAAG,EAAV,GAAe,EAAf,GAAoB,EAA9B,CAAkC,MAA5C;AACD;AAED,OAAO,SAASG,mBAAT,CAA6BC,IAA7B,EAA2C;AAChD,QAAMJ,OAAO,GAAGC,IAAI,CAACI,KAAL,CAAWD,IAAI,GAAG,EAAlB,CAAhB;AACA,QAAME,OAAO,GAAGL,IAAI,CAACI,KAAL,CAAYD,IAAI,GAAG,EAAR,GAAc,EAAzB,CAAhB;AACA,QAAMG,KAAK,GAAGN,IAAI,CAACI,KAAL,CAAYD,IAAI,GAAG,EAAP,GAAY,EAAb,GAAmB,EAA9B,CAAd;AACA,QAAMI,IAAI,GAAGP,IAAI,CAACI,KAAL,CAAWD,IAAI,GAAG,EAAP,GAAY,EAAZ,GAAiB,EAA5B,CAAb;AAEA,SAAO,CACLI,IAAI,IAAK,GAAEA,IAAK,MADX,EAELD,KAAK,IAAK,GAAEA,KAAM,KAFb,EAGLD,OAAO,IAAK,GAAEA,OAAQ,MAHjB,EAILN,OAAO,IAAK,GAAEA,OAAQ,GAJjB,EAMJS,MANI,CAMGC,OANH,EAOJC,IAPI,CAOC,GAPD,CAAP;AAQD","sourcesContent":["export function secondsToString(seconds: number) {\n  if (seconds <= 60) {\n    return \"1min\";\n  }\n\n  // Less than 1 hour\n  if (seconds < 60 * 60) {\n    return `${Math.ceil(seconds / 60)}mins`;\n  }\n\n  if (seconds === 60 * 60) {\n    return \"1hr\";\n  }\n\n  if (seconds < 60 * 60 * 24) {\n    return `${Math.ceil(seconds / 60 / 60)}hrs`;\n  }\n\n  if (seconds === 60 * 60 * 24) {\n    return \"1day\";\n  }\n\n  return `${Math.ceil(seconds / 60 / 60 / 24)}days`;\n}\n\nexport function secondsToLongString(time: number) {\n  const seconds = Math.floor(time % 60);\n  const minutes = Math.floor((time / 60) % 60);\n  const hours = Math.floor((time / 60 / 60) % 24);\n  const days = Math.floor(time / 60 / 60 / 24);\n\n  return [\n    days && `${days}days`,\n    hours && `${hours}hrs`,\n    minutes && `${minutes}mins`,\n    seconds && `${seconds}s`,\n  ]\n    .filter(Boolean)\n    .join(\" \");\n}\n"]},"metadata":{},"sourceType":"module"}
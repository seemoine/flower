{"ast":null,"code":"import { items } from \"./crafting\";\nimport { FRUITS, Fruit } from \"./fruits\";\nexport { Fruit };\nexport let Charity;\n\n(function (Charity) {\n  Charity[\"TheWaterProject\"] = \"0x060697E9d4EEa886EbeCe57A974Facd53A40865B\";\n  Charity[\"Heifer\"] = \"0xD3F81260a44A1df7A7269CF66Abd9c7e4f8CdcD1\";\n  Charity[\"CoolEarth\"] = \"0x3c8cB169281196737c493AfFA8F49a9d823bB9c5\";\n})(Charity || (Charity = {}));\n\nexport let Action;\n\n(function (Action) {\n  Action[Action[\"Plant\"] = 0] = \"Plant\";\n  Action[Action[\"Harvest\"] = 1] = \"Harvest\";\n})(Action || (Action = {}));\n\nexport function isFruit(item) {\n  return !item.address;\n}\nexport const ACTIONABLE_ITEMS = [...FRUITS, ...items];","map":{"version":3,"sources":["/home/jacob/Documents/Programming/myApp/src/dapp/types/contract.ts"],"names":["items","FRUITS","Fruit","Charity","Action","isFruit","item","address","ACTIONABLE_ITEMS"],"mappings":"AAAA,SAAeA,KAAf,QAA4B,YAA5B;AACA,SAAoBC,MAApB,EAA4BC,KAA5B,QAAyC,UAAzC;AAEA,SAASA,KAAT;AAEA,WAAYC,OAAZ;;WAAYA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;AAAAA,EAAAA,O;GAAAA,O,KAAAA,O;;AAsBZ,WAAYC,MAAZ;;WAAYA,M;AAAAA,EAAAA,M,CAAAA,M;AAAAA,EAAAA,M,CAAAA,M;GAAAA,M,KAAAA,M;;AAOZ,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAA0D;AAC/D,SAAO,CAAEA,IAAD,CAAeC,OAAvB;AACD;AAED,OAAO,MAAMC,gBAAgB,GAAG,CAAC,GAAGP,MAAJ,EAAY,GAAGD,KAAf,CAAzB","sourcesContent":["import { Item, items } from \"./crafting\";\nimport { FruitItem, FRUITS, Fruit } from \"./fruits\";\n\nexport { Fruit };\n\nexport enum Charity {\n  TheWaterProject = \"0x060697E9d4EEa886EbeCe57A974Facd53A40865B\",\n  Heifer = \"0xD3F81260a44A1df7A7269CF66Abd9c7e4f8CdcD1\",\n  CoolEarth = \"0x3c8cB169281196737c493AfFA8F49a9d823bB9c5\",\n}\n\nexport interface Donation {\n  charity: Charity;\n  value: string;\n}\nexport interface Square {\n  fruit: Fruit;\n  createdAt: number;\n}\n\nexport interface Transaction {\n  fruit: Fruit;\n  createdAt: number;\n  action: Action;\n  landIndex: number;\n}\n\nexport enum Action {\n  Plant = 0,\n  Harvest = 1,\n}\n\nexport type ActionableItem = FruitItem | Item;\n\nexport function isFruit(item: ActionableItem): item is FruitItem {\n  return !(item as Item).address;\n}\n\nexport const ACTIONABLE_ITEMS = [...FRUITS, ...items];\n"]},"metadata":{},"sourceType":"module"}